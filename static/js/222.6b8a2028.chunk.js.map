{"version":3,"file":"static/js/222.6b8a2028.chunk.js","mappings":"kRAEaA,EAAoBC,EAAAA,GAAAA,GAAH,8BAIjBC,EAAoBD,EAAAA,GAAAA,GAAH,8BAIjBE,EAAsBF,EAAAA,GAAAA,GAAH,mEAKnBG,EAAuBH,EAAAA,GAAAA,EAAH,8BAIpBI,EAAqBJ,EAAAA,GAAAA,EAAH,wF,SCXhB,SAASK,EAAT,GAAiC,IAAXC,EAAU,EAAVA,QACjC,OACE,+BACM,SAACP,EAAD,UAAoBO,EAAQC,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3C,OACE,UAACT,EAAD,YACE,UAACC,EAAD,sBAA8BO,MAC9B,SAACN,EAAD,UAAuBO,MAFDF,EAKjC,OAGR,CCdc,SAASG,IACpB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAON,EAAP,KAAgBO,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAiB,mCAAG,8GAECC,EAAAA,EAAAA,IAAiBJ,GAFlB,OAEZK,EAFY,OAIlBN,EAAWM,GAJO,gDAMlBC,QAAQC,IAAR,MANkB,yDAAH,qDASvBJ,GACH,GAAE,CAACH,IAEGR,EAAQgB,OAAS,GACtB,SAACjB,EAAD,CAAaC,QAASA,KAEtB,SAACF,EAAD,+DAIL,C,8RC9BKmB,EAAW,+BACXC,EAAU,mCACHC,EAAe,mCACfC,EAAoB,mCACpBC,EAAsB,mCACtBC,EACX,wHAEIC,EAAiB,UAAMN,EAAN,uBACjBO,EAAc,UAAMP,EAAN,iBACdQ,EAAgB,UAAMR,EAAN,WAChBS,EAAa,UAAMT,EAAN,WACbU,EAAgB,UAAMV,EAAN,WAIf,SAAeW,IAAtB,+B,aAAO,O,oBAAA,6GAEqBC,EAAAA,GAAAA,IAAA,UAAaN,EAAb,oBAA0CL,IAF/D,cAEIY,EAFJ,yBAIIA,EAAQjB,KAAKiB,SAJjB,gCAMHhB,QAAQC,IAAR,MANG,gFAYA,SAAegB,EAAtB,kC,aAAO,O,oBAAA,WAA4BC,GAA5B,gGAEgBH,EAAAA,GAAAA,IAAA,UACdL,EADc,oBACYN,EADZ,kBAC6Bc,EAD7B,yBAFhB,cAEGnB,EAFH,yBAKIA,EAAKA,KAAKiB,SALd,gCAOHhB,QAAQC,IAAR,MAPG,gFAYA,SAAekB,EAAtB,+CAAO,OAAP,oBAAO,WAAmC/B,GAAnC,gGAEiB2B,EAAAA,GAAAA,IAAA,UACfJ,GADe,OACIvB,EADJ,oBACkBgB,EADlB,oBAFjB,cAEGL,EAFH,yBAMIA,EAAKA,MANT,gCAQHC,QAAQC,IAAR,MARG,gFAeA,SAAemB,EAAtB,+CAAO,OAAP,oBAAO,WAA6BhC,GAA7B,gGAEgB2B,EAAAA,GAAAA,IAAA,UACdH,GADc,OACExB,EADF,4BACwBgB,EADxB,oBAFhB,cAEGL,EAFH,yBAMIA,EAAKA,KAAKsB,MANd,gCAQHrB,QAAQC,IAAR,MARG,gFAaA,SAAeH,EAAtB,kC,aAAO,O,oBAAA,WAAgCV,GAAhC,gGAEkB2B,EAAAA,GAAAA,IAAA,UACdF,GADc,OACKzB,EADL,4BAC2BgB,EAD3B,oBAFlB,cAEKL,EAFL,yBAMMA,EAAKA,KAAKiB,SANhB,gCAQDhB,QAAQC,IAAR,MARC,gF","sources":["components/ReviewsList/ReviewsList.styled.jsx","components/ReviewsList/ReviewsList.jsx","pages/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledReviewsList = styled.ul`\n    \n`;\n\nexport const StyledReviewsItem = styled.li`\n    \n`;\n\nexport const StyledReviewsAuthor = styled.h3`\n    text-align: center;\n    color: blue;\n`\n\nexport const StyledReviewsContent = styled.p`\n    \n`;\n\nexport const StyledReviewsError = styled.p`\n    font-size: 24px;\n    text-align: center;\n    color: red;\n`;","import propTypes from 'prop-types';\nimport {\n  StyledReviewsList,\n  StyledReviewsItem,\n  StyledReviewsAuthor,\n  StyledReviewsContent,\n} from './ReviewsList.styled';\n\nexport default function ReviewsList({reviews}) {\n    return (\n      <>\n            <StyledReviewsList>{reviews.map(({ id, author, content }) => {\n                return (\n                  <StyledReviewsItem key={id}>\n                    <StyledReviewsAuthor>Author: {author}</StyledReviewsAuthor>\n                    <StyledReviewsContent>{content}</StyledReviewsContent>\n                  </StyledReviewsItem>\n                );\n        })}</StyledReviewsList>\n      </>\n    );\n}\n\nReviewsList.propTypes = {\n  reviews: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string.isRequired,\n      author: propTypes.string,\n      content: propTypes.string,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { GetReviewsMovies } from 'services/api';\nimport ReviewsList from 'components/ReviewsList/ReviewsList';\nimport { StyledReviewsError } from 'components/ReviewsList/ReviewsList.styled';\n\n\nexport default function Reviews() {\n    const [reviews, setReviews] = useState([]);\n\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        const reviewsMoviesInfo = async () => {\n            try {\n                const data = await GetReviewsMovies(movieId);\n                // console.log(data);\n                setReviews(data);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n        reviewsMoviesInfo();\n    }, [movieId]);\n\n    return reviews.length > 0 ? (\n      <ReviewsList reviews={reviews} />\n    ) : (\n      <StyledReviewsError>Sorry, there are no reviews for this movie... :( </StyledReviewsError>\n    );\n    \n  \n}\n","import axios from \"axios\";\n// const axios = require('axios').default;\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b2e346a99b15e55caecd14435e9b588f';\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w342/';\nexport const BASE_IMG_URL_CAST = 'https://image.tmdb.org/t/p/w185/';\nexport const BASE_POSTER_IMG_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const NO_IMG_ACTOR =\n  'https://www.wikihow.com/images/thumb/f/fb/Become-an-Actor-Step-23.jpg/aid117991-v4-1200px-Become-an-Actor-Step-23.jpg';\n\nconst TRENDING_BASE_URL = `${BASE_URL}/trending/movie/day`;\nconst SERCH_BASE_URL = `${BASE_URL}/search/movie`;\nconst DETAILS_BASE_URL = `${BASE_URL}/movie/`;\nconst CAST_BASE_URL = `${BASE_URL}/movie/`;\nconst REVIEWS_BASE_URL = `${BASE_URL}/movie/`;\n\n\n// трендовые фильмы\nexport async function TrendingMovies() {\n  try {\n    const  results  = await axios.get(`${TRENDING_BASE_URL}?api_key=${API_KEY}`);\n    // console.log( results );\n    return results.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n// 'https://api.themoviedb.org/3/trending/movie/day?api_key=b2e346a99b15e55caecd14435e9b588f'\n\n//по слову\nexport async function SearchMovies(query) {\n  try {\n    const data = await axios.get(\n      `${SERCH_BASE_URL}?api_key=${API_KEY}&query=${query}&include_adult=false`\n    );\n    return data.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// по id полная инфа фильма\nexport async function SearchMoviesDetails(id) {\n  try {\n    const data  = await axios.get(\n      `${DETAILS_BASE_URL}${id}?api_key=${API_KEY}&language=en-US`\n    );\n    //  console.log(data);\n    return data.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// https://image.tmdb.org/t/p/w342/532870?api_key=b2e346a99b15e55caecd14435e9b588f&language=en-US\n\n//актерский состав\nexport async function GetCastMovies(id) {\n  try {\n    const data = await axios.get(\n      `${CAST_BASE_URL}${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    // console.log(data);\n    return data.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//обзоры\nexport async function GetReviewsMovies(id) {\n    try {\n      const data = await axios.get(\n        `${REVIEWS_BASE_URL}${id}/reviews?api_key=${API_KEY}&language=en-US`\n      );\n      // console.log(data);\n      return data.data.results;\n    } catch (error) {\n      console.log(error);\n    }   \n}\n\n// https://api.themoviedb.org/3/movie/49046/reviews?api_key=b2e346a99b15e55caecd14435e9b588f&language=en-US\n\n// export const TrendingMovies = async () => {\n//     try {\n//         const data = await axios.get(`${TRENDING_BASE_URL}?api_key=${API_KEY}`);\n//         return data;\n\n//     } catch (error) {\n//         console.log(error);\n//     }\n\n// }\n"],"names":["StyledReviewsList","styled","StyledReviewsItem","StyledReviewsAuthor","StyledReviewsContent","StyledReviewsError","ReviewsList","reviews","map","id","author","content","Reviews","useState","setReviews","movieId","useParams","useEffect","reviewsMoviesInfo","GetReviewsMovies","data","console","log","length","BASE_URL","API_KEY","BASE_IMG_URL","BASE_IMG_URL_CAST","BASE_POSTER_IMG_URL","NO_IMG_ACTOR","TRENDING_BASE_URL","SERCH_BASE_URL","DETAILS_BASE_URL","CAST_BASE_URL","REVIEWS_BASE_URL","TrendingMovies","axios","results","SearchMovies","query","SearchMoviesDetails","GetCastMovies","cast"],"sourceRoot":""}