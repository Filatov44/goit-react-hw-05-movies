{"version":3,"file":"static/js/324.80b3a5f3.chunk.js","mappings":"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","sources":["components/HomeGallery/HomeGallery.styled.jsx","components/HomeGallery/HomeGallery.jsx","components/SearchForm/SearchForm.style.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledGalleryList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  padding: 0;\n \n  /* gap: 20px; */\n`;\n\nexport const StyledGalleryItem = styled.li`\n  text-align: center;\n  margin-bottom: 25px;\n  list-style: none;\n  overflow: hidden;\n  border: 1px solid #df7710;\n  border-radius: 15px;\n  box-shadow: 0px 5px 5px black;\n  &:hover {\n    color: red;\n    scale: 1.05;\n  }\n`;\n\nexport const StyledGalleryTitle = styled.h3`\n    font-size: 24px;\n    font-weight: 500;\n    color: black;\n    text-align: center;\n`;\n\nexport const StyledGalleryLink = styled(Link)`\n    text-decoration:none;\n    \n`;\n\nexport const StyledGalleryMovieTitle = styled.p`\n    font-size: 20px;\n    max-width: 342px;\n    color: black;\n    padding-top:15px;\n    padding-bottom: 15px;\n`\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  StyledGalleryList,\n  StyledGalleryItem,\n  StyledGalleryTitle,\n  StyledGalleryLink,\n  StyledGalleryMovieTitle,\n} from './HomeGallery.styled';\n\nimport { BASE_IMG_URL } from 'services/api';\n\nexport default function HomeGallery({ onMovies, title }) {\n    const location = useLocation();\n\n  const emptyImg =\n    'https://www.wikihow.com/images/thumb/f/f7/Be-a-Film-Director-Step-16-Version-2.jpg/aid960853-v4-1200px-Be-a-Film-Director-Step-16-Version-2.jpg';\n\n  return (\n    <>\n      <StyledGalleryTitle>{title}</StyledGalleryTitle>\n      <StyledGalleryList>\n        {onMovies.map(({ id, original_title, poster_path }) => {\n          return (\n            <StyledGalleryItem key={id}>\n              <StyledGalleryLink\n                state={{ from: location }}\n                to={`/movies/${id}`}\n              >\n                <img\n                  src={poster_path ? `${BASE_IMG_URL}${poster_path}` : emptyImg}\n                  alt={original_title}\n                />\n                <StyledGalleryMovieTitle>\n                  {original_title}\n                </StyledGalleryMovieTitle>\n              </StyledGalleryLink>\n            </StyledGalleryItem>\n          );\n        })}\n      </StyledGalleryList>\n    </>\n  );\n}\n\nHomeGallery.propTypes = {\n    movies: PropTypes.array\n};\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 15px;\n  margin-top: 15px;\n`;\nexport const StyledSearchBtn = styled.button`\n  display: flex;\n  border: none;\n  border-radius: 15px;\n  padding: 10px;\n  background-color: #fff;\n  cursor: pointer;\n  transition: box-shadow 0.4s ease-in-out;\n\n  :hover,\n  :focus {\n    background-color: #ffa60042;\n    box-shadow: 1px 1px 5px 0px rgba(0, 0, 0, 0.75) inset;\n  }\n`;\n\nexport const StyledSerchText = styled.span`\n  font-size: 20px;\n  margin-left: 5px;\n  color: blue;\n`\n\nexport const StyledSearchInput = styled.input`\n  padding: 10px;\n  max-width: 400px;\n  box-sizing: border-box;\n  border-radius: 15px;\n  border: solid 2px red;\n  outline: none;\n  transition: box-shadow 0.4s ease-in-out;\n  :focus {\n    box-shadow: 1px 1px 5px 0px rgba(0, 0, 0, 0.75) inset;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { BsSearch } from 'react-icons/bs';\nimport {\n  StyledForm,\n  StyledSearchInput,\n  StyledSearchBtn,\n  StyledSerchText,\n} from './SearchForm.style';\n\nexport default function SearchForm({onSubmit}) {\n\n    const [query, setQuery] = useState('');\n\n    \n  const reset = () => {\n    setQuery('');\n  };\n\n    const handleChange = e => {\n      setQuery(e.target.value);\n    };\n\n    const handleSubmit = e => {\n      e.preventDefault();\n      if (query.trim() === '') {\n        alert('Please enter a valid request');\n        return;\n      }\n      onSubmit(query);\n      reset();\n    };\n\n  return (\n    <>\n      <StyledForm onSubmit={handleSubmit}>\n        <StyledSearchInput\n          onChange={handleChange}\n          value={query}\n          name=\"query\"\n          type=\"text\"\n          autocomplete=\"off\"\n          placeholder=\"Search movies...\"\n        ></StyledSearchInput>\n        <StyledSearchBtn onClick={handleSubmit} type=\"submit\">\n          <BsSearch fill=\"#0000ff\" size={20} />{' '}\n          <StyledSerchText>Search</StyledSerchText>\n        </StyledSearchBtn>\n      </StyledForm>\n    </>\n  );\n}\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport HomeGallery from 'components/HomeGallery/HomeGallery';\nimport { SearchMovies } from 'services/api';\n\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n    const [searchQuery, setSearchQuery] = useSearchParams();\n    \n    \n\n  // записываем в переменную значение 'query' из строки поиска\n    const query = searchQuery.get('query');\n    \n    useEffect(() => {\n        if (query) {\n            const moviesBySerch = async () => {\n                try {\n                    const data = await SearchMovies(query);\n                    setMovies(data)\n                } catch (error) {\n                    console.log(error);\n                }\n            }\n            moviesBySerch();\n        }\n        return;\n    }, [query]);\n\n    const changeQuery = q => {\n        setSearchQuery({ query: q });\n    };\n\n    const isPosts = Boolean(movies.length);\n\n    return (\n      <>\n        <SearchForm onSubmit={changeQuery} />\n        {isPosts && <HomeGallery onMovies={movies}  />}\n      </>\n    );\n  \n}\n","import axios from \"axios\";\n// const axios = require('axios').default;\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b2e346a99b15e55caecd14435e9b588f';\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w342/';\nexport const BASE_IMG_URL_CAST = 'https://image.tmdb.org/t/p/w185/';\nexport const BASE_POSTER_IMG_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const NO_IMG_ACTOR =\n  'https://www.wikihow.com/images/thumb/f/fb/Become-an-Actor-Step-23.jpg/aid117991-v4-1200px-Become-an-Actor-Step-23.jpg';\n\nconst TRENDING_BASE_URL = `${BASE_URL}/trending/movie/day`;\nconst SERCH_BASE_URL = `${BASE_URL}/search/movie`;\nconst DETAILS_BASE_URL = `${BASE_URL}/movie/`;\nconst CAST_BASE_URL = `${BASE_URL}/movie/`;\nconst REVIEWS_BASE_URL = `${BASE_URL}/movie/`;\n\n\n// трендовые фильмы\nexport async function TrendingMovies() {\n  try {\n    const  results  = await axios.get(`${TRENDING_BASE_URL}?api_key=${API_KEY}`);\n    console.log( results );\n    return results.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n// 'https://api.themoviedb.org/3/trending/movie/day?api_key=b2e346a99b15e55caecd14435e9b588f'\n\n//по слову\nexport async function SearchMovies(query) {\n  try {\n    const data = await axios.get(\n      `${SERCH_BASE_URL}?api_key=${API_KEY}&query=${query}&include_adult=false`\n    );\n    return data.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// по id полная инфа фильма\nexport async function SearchMoviesDetails(id) {\n  try {\n    const data  = await axios.get(\n      `${DETAILS_BASE_URL}${id}?api_key=${API_KEY}&language=en-US`\n    );\n     console.log(data);\n    return data.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// https://image.tmdb.org/t/p/w342/532870?api_key=b2e346a99b15e55caecd14435e9b588f&language=en-US\n\n//актерский состав\nexport async function GetCastMovies(id) {\n  try {\n    const data = await axios.get(\n      `${CAST_BASE_URL}${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    console.log(data);\n    return data.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//обзоры\nexport async function GetReviewsMovies(id) {\n    try {\n      const data = await axios.get(\n        `${REVIEWS_BASE_URL}${id}/reviews?api_key=${API_KEY}&language=en-US`\n      );\n      console.log(data);\n      return data.data.results;\n    } catch (error) {\n      console.log(error);\n    }   \n}\n\n// https://api.themoviedb.org/3/movie/49046/reviews?api_key=b2e346a99b15e55caecd14435e9b588f&language=en-US\n\n// export const TrendingMovies = async () => {\n//     try {\n//         const data = await axios.get(`${TRENDING_BASE_URL}?api_key=${API_KEY}`);\n//         return data;\n\n//     } catch (error) {\n//         console.log(error);\n//     }\n\n// }\n"],"names":["StyledGalleryList","styled","StyledGalleryItem","StyledGalleryTitle","StyledGalleryLink","Link","StyledGalleryMovieTitle","HomeGallery","onMovies","title","location","useLocation","map","id","original_title","poster_path","state","from","to","src","BASE_IMG_URL","alt","StyledForm","StyledSearchBtn","StyledSerchText","StyledSearchInput","SearchForm","onSubmit","useState","query","setQuery","handleSubmit","e","preventDefault","trim","alert","onChange","target","value","name","type","autocomplete","placeholder","onClick","fill","size","Movies","movies","setMovies","useSearchParams","searchQuery","setSearchQuery","get","useEffect","moviesBySerch","SearchMovies","data","console","log","isPosts","Boolean","length","q","BASE_URL","API_KEY","BASE_IMG_URL_CAST","BASE_POSTER_IMG_URL","NO_IMG_ACTOR","TRENDING_BASE_URL","SERCH_BASE_URL","DETAILS_BASE_URL","CAST_BASE_URL","REVIEWS_BASE_URL","TrendingMovies","axios","results","SearchMoviesDetails","GetCastMovies","cast","GetReviewsMovies"],"sourceRoot":""}