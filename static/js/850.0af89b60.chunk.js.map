{"version":3,"file":"static/js/850.0af89b60.chunk.js","mappings":"gRACaA,EAAiBC,EAAAA,GAAAA,GAAH,8JASdC,EAAqBD,EAAAA,GAAAA,GAAH,qJAQlBE,EAAqBF,EAAAA,GAAAA,EAAH,mFAMjBG,EAA0BH,EAAAA,GAAAA,EAAH,wE,SCftB,SAASI,EAAT,GAA2B,IAARC,EAAO,EAAPA,KAChC,OACI,0BACI,SAACN,EAAD,UACKM,EAAKC,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAC9B,OACE,UAACT,EAAD,YACE,gBACEU,IAAKD,EAAY,UAAME,EAAAA,IAAN,OAA0BF,GAA1B,UAA8CG,EAAAA,IAC/DC,IAAKL,EACLM,MAAM,QACNC,OAAO,WAET,SAACd,EAAD,UAAqBO,KACrB,UAACN,EAAD,yBAAqCK,GAAwB,sBARtCD,EAW9B,OAId,CCxBc,SAASU,IACpB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOb,EAAP,KAAac,EAAb,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,8GAEEC,EAAAA,EAAAA,IAAcJ,GAFhB,OAEXK,EAFW,OAGjBC,QAAQC,IAAIF,GACdN,EAAQM,GAJW,gDAMnBC,QAAQC,IAAR,MANmB,yDAAH,qDASpBJ,GACD,GAAE,CAACH,IAEGf,IAAQ,SAACD,EAAD,CAAUC,KAAMA,GAClC,C,8RCvBKuB,EAAW,+BACXC,EAAU,mCACHC,EAAe,mCACflB,EAAoB,mCACpBmB,EAAsB,mCACtBlB,EACX,wHAEImB,EAAiB,UAAMJ,EAAN,uBACjBK,EAAc,UAAML,EAAN,iBACdM,EAAgB,UAAMN,EAAN,WAChBO,EAAa,UAAMP,EAAN,WACbQ,EAAgB,UAAMR,EAAN,WAIf,SAAeS,IAAtB,+B,aAAO,O,oBAAA,6GAEqBC,EAAAA,GAAAA,IAAA,UAAaN,EAAb,oBAA0CH,IAF/D,cAEIU,EAFJ,OAGHb,QAAQC,IAAKY,GAHV,kBAIIA,EAAQd,KAAKc,SAJjB,gCAMHb,QAAQC,IAAR,MANG,gFAYA,SAAea,EAAtB,kC,aAAO,O,oBAAA,WAA4BC,GAA5B,gGAEgBH,EAAAA,GAAAA,IAAA,UACdL,EADc,oBACYJ,EADZ,kBAC6BY,EAD7B,yBAFhB,cAEGhB,EAFH,yBAKIA,EAAKA,KAAKc,SALd,gCAOHb,QAAQC,IAAR,MAPG,gFAYA,SAAee,EAAtB,+CAAO,OAAP,oBAAO,WAAmCnC,GAAnC,gGAEiB+B,EAAAA,GAAAA,IAAA,UACfJ,GADe,OACI3B,EADJ,oBACkBsB,EADlB,oBAFjB,cAEGJ,EAFH,OAKFC,QAAQC,IAAIF,GALV,kBAMIA,EAAKA,MANT,gCAQHC,QAAQC,IAAR,MARG,gFAeA,SAAeH,EAAtB,+CAAO,OAAP,oBAAO,WAA6BjB,GAA7B,gGAEgB+B,EAAAA,GAAAA,IAAA,UACdH,GADc,OACE5B,EADF,4BACwBsB,EADxB,oBAFhB,cAEGJ,EAFH,OAKHC,QAAQC,IAAIF,GALT,kBAMIA,EAAKA,KAAKpB,MANd,gCAQHqB,QAAQC,IAAR,MARG,gFAaA,SAAegB,EAAtB,kC,aAAO,O,oBAAA,WAAgCpC,GAAhC,gGAEkB+B,EAAAA,GAAAA,IAAA,UACdF,GADc,OACK7B,EADL,4BAC2BsB,EAD3B,oBAFlB,cAEKJ,EAFL,OAKDC,QAAQC,IAAIF,GALX,kBAMMA,EAAKA,KAAKc,SANhB,gCAQDb,QAAQC,IAAR,MARC,gF","sources":["components/Cast/CastList.styled.jsx","components/Cast/CastList.jsx","pages/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nexport const StyledCastList = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n    margin-bottom: 25px;\n    margin-left: auto;\n    margin-right: auto;\n `;\n\nexport const StyledCastListItem = styled.li`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    width: 200px;\n `;\n\nexport const StyledCastListName = styled.p`\n  font-size: 20px;\n  text-align: center;\n  color: blue;\n`;\n\n export const StyledCastListCharacter = styled.p`\n    font-size: 16px;\n    text-align: center;\n `","import propTypes from 'prop-types';\nimport { BASE_IMG_URL_CAST, NO_IMG_ACTOR } from 'services/api';\nimport {\n  StyledCastList,\n  StyledCastListItem,\n  StyledCastListName,\n  StyledCastListCharacter,\n} from './CastList.styled';\n\nexport default function CastList({cast}) {\n  return (\n      <div>\n          <StyledCastList>\n              {cast.map(({ id, character, name, profile_path }) => {\n                  return (\n                    <StyledCastListItem key={id}>\n                      <img\n                        src={profile_path ? `${BASE_IMG_URL_CAST}${profile_path}` : `${NO_IMG_ACTOR}`}\n                        alt={name}\n                        width=\"185px\"\n                        height=\"250px\"\n                      />\n                      <StyledCastListName>{name}</StyledCastListName>\n                      <StyledCastListCharacter>Character: {character ? character : \"No information\"}</StyledCastListCharacter>\n                    </StyledCastListItem>\n                  );\n              })}\n          </StyledCastList>\n   </div>\n  )\n};\n\nCastList.propTypes = {\n  cast: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number.isRequired,\n      name: propTypes.string.isRequired,\n        profile_path: propTypes.string,\n      character: propTypes.string,\n    })\n  ),\n};\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { GetCastMovies } from \"services/api\";\nimport CastList from \"components/Cast/CastList\";\n\n\nexport default function Cast() {\n    const [cast, setCast] = useState([]);\n\n    const { movieId } = useParams();\n\n    useEffect(() => {\n      const castMoviesInfo = async () => {\n        try {\n            const data = await GetCastMovies(movieId);\n            console.log(data);\n          setCast(data);\n        } catch (error) {\n          console.log(error);\n        }\n      };\n      castMoviesInfo();\n    }, [movieId]);\n\n    return cast && <CastList cast={cast} />;\n}","import axios from \"axios\";\n// const axios = require('axios').default;\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b2e346a99b15e55caecd14435e9b588f';\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w342/';\nexport const BASE_IMG_URL_CAST = 'https://image.tmdb.org/t/p/w185/';\nexport const BASE_POSTER_IMG_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const NO_IMG_ACTOR =\n  'https://www.wikihow.com/images/thumb/f/fb/Become-an-Actor-Step-23.jpg/aid117991-v4-1200px-Become-an-Actor-Step-23.jpg';\n\nconst TRENDING_BASE_URL = `${BASE_URL}/trending/movie/day`;\nconst SERCH_BASE_URL = `${BASE_URL}/search/movie`;\nconst DETAILS_BASE_URL = `${BASE_URL}/movie/`;\nconst CAST_BASE_URL = `${BASE_URL}/movie/`;\nconst REVIEWS_BASE_URL = `${BASE_URL}/movie/`;\n\n\n// трендовые фильмы\nexport async function TrendingMovies() {\n  try {\n    const  results  = await axios.get(`${TRENDING_BASE_URL}?api_key=${API_KEY}`);\n    console.log( results );\n    return results.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n// 'https://api.themoviedb.org/3/trending/movie/day?api_key=b2e346a99b15e55caecd14435e9b588f'\n\n//по слову\nexport async function SearchMovies(query) {\n  try {\n    const data = await axios.get(\n      `${SERCH_BASE_URL}?api_key=${API_KEY}&query=${query}&include_adult=false`\n    );\n    return data.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// по id полная инфа фильма\nexport async function SearchMoviesDetails(id) {\n  try {\n    const data  = await axios.get(\n      `${DETAILS_BASE_URL}${id}?api_key=${API_KEY}&language=en-US`\n    );\n     console.log(data);\n    return data.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// https://image.tmdb.org/t/p/w342/532870?api_key=b2e346a99b15e55caecd14435e9b588f&language=en-US\n\n//актерский состав\nexport async function GetCastMovies(id) {\n  try {\n    const data = await axios.get(\n      `${CAST_BASE_URL}${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    console.log(data);\n    return data.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//обзоры\nexport async function GetReviewsMovies(id) {\n    try {\n      const data = await axios.get(\n        `${REVIEWS_BASE_URL}${id}/reviews?api_key=${API_KEY}&language=en-US`\n      );\n      console.log(data);\n      return data.data.results;\n    } catch (error) {\n      console.log(error);\n    }   \n}\n\n// https://api.themoviedb.org/3/movie/49046/reviews?api_key=b2e346a99b15e55caecd14435e9b588f&language=en-US\n\n// export const TrendingMovies = async () => {\n//     try {\n//         const data = await axios.get(`${TRENDING_BASE_URL}?api_key=${API_KEY}`);\n//         return data;\n\n//     } catch (error) {\n//         console.log(error);\n//     }\n\n// }\n"],"names":["StyledCastList","styled","StyledCastListItem","StyledCastListName","StyledCastListCharacter","CastList","cast","map","id","character","name","profile_path","src","BASE_IMG_URL_CAST","NO_IMG_ACTOR","alt","width","height","Cast","useState","setCast","movieId","useParams","useEffect","castMoviesInfo","GetCastMovies","data","console","log","BASE_URL","API_KEY","BASE_IMG_URL","BASE_POSTER_IMG_URL","TRENDING_BASE_URL","SERCH_BASE_URL","DETAILS_BASE_URL","CAST_BASE_URL","REVIEWS_BASE_URL","TrendingMovies","axios","results","SearchMovies","query","SearchMoviesDetails","GetReviewsMovies"],"sourceRoot":""}